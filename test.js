var Pi = '3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568127145263560827785771342757789609173637178721468440901224953430146549585371050792279689258923542019956112129021960864034418159813629774771309960518707211349999998372978049951059731732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303598253490428755468731159562863882353787593751957781857780532171226806613001927876611195909216420198';
var gridSetup = true;
var hu = 0;

function pointByIndex(index, style = "grid", pointArray = []) {
	if (style === "grid") {
		var sWidth = (width / 50) - 1;
		var sHeight = (height / 50) - 1;

		if (index < 0 || index > sWidth * sHeight) {
			return { x: 0, y: 0 };
		}

		var x = (index) % sWidth + 1;
		var y = (index - (x - 1)) / sWidth + 1;

		return { x: x * 50, y: y * 50 };
	} else if (style === "symbol") {
		return pointArray[index];
	}
}

function newArray(spaces) {
	var array = [];
	for (var i = 0; i < spaces; i++) {
		array.push(undefined);
	}
	return array;
}

function gridPoints() {
	var sWidth = (width / 50) - 1;
	var sHeight = (height / 50) - 1;
	var points = newArray(sWidth * sHeight);
	points.forEach((x, y, z) => z[y] = pointByIndex(y));
	return points;
}

function piPoints() {
	var pi_text = 'Ï€';
	var pi_text_size = 800;
	var bounds = font.textBounds(pi_text, 0, 0, pi_text_size);
	var posx = width / 2 - bounds.w / 2;
	var posy = height / 2 + bounds.h / 2;
	return font.textToPoints(pi_text, posx, posy, pi_text_size, {
		sampleFactor: 0.08
	});
}

function radToDeg(rad) {
	return rad * (Math.PI / 180);
}

var piDigit = (index, length, spaces) => Pi.substr((index + spaces)%length, 1);